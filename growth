#Extract predictors 

library("googleAnalyticsR")
library("devtools")
library("RGA")

ga_auth()

ga_data <- get_mcf('108643487', start.date = "2016-01-01", 
                   end.date = "2016-12-30" , metrics = "mcf:totalConversions", 
                   dimensions = "mcf:conversionDate",
                   filters="mcf:conversionType==Transaction")


ga_data$conversionDate <- seq.Date(as.Date("2016-01-01"), by = 1, length.out = 365)
colnames(ga_data) <- c("ds", "y")

#Facebook prophet

library(prophet)
library(dplyr)

df <- ga_data %>%
mutate(y = log(y))

m <- prophet(df)
future <- make_future_dataframe(m, periods = 365)
tail(future)

forecast <- predict(m, future)
tail(forecast[c('ds', 'yhat', 'yhat_lower', 'yhat_upper')])
plot(m, forecast)       

prophet_plot_components(m, forecast)

#Retrive natural logarithm
#Inverse exponential e=2.178 or natural log
exp(6.810800)


##Control efficiency model

ga_data_17 <- get_mcf('108643487', start.date = "2017-01-01", 
                   end.date = "2017-09-30" , metrics = "mcf:totalConversions", 
                   dimensions = "mcf:conversionDate",
                   filters="mcf:conversionType==Transaction")

ga_data_17$conversionDate <- seq.Date(as.Date("2017-01-01"), by = 1, length.out = 273)
control=merge(ga_data_17, forecast, by.x = "conversionDate" , by.y = "ds", all.x = TRUE)



forecast17 <- subset(forecast, ds >= '2017-01-01' & ds < '2017-10-01')

# Add columns in DF
cvr_17 <- ga_data_17$totalConversions
forecast17$cvr_17 <- cvr_17
e <- forecast17$yhat
forecast17$e <- exp(e)
diff <- (cvr_17/e)

forecast17$diff <- diff
mean(diff)
median(diff)

